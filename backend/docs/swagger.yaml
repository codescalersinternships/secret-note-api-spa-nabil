basePath: /
definitions:
  db.Note:
    properties:
      createdat:
        description: Automatically managed by GORM for creation time
        type: string
      expiredat:
        type: string
      id:
        type: string
      noteremvisits:
        type: integer
      text:
        type: string
      user:
        $ref: '#/definitions/db.User'
      userid:
        type: string
    type: object
  db.User:
    properties:
      createdat:
        description: Automatically managed by GORM for creation time
        type: string
      email:
        description: A pointer to a string, allowing for null values
        type: string
      id:
        description: Standard field for the primary key
        type: string
      name:
        description: A regular string field that can't be null
        type: string
      password:
        description: A regular string field that can't be null
        type: string
      updatedat:
        description: Automatically managed by GORM for update time
        type: string
    type: object
  secretnote.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  secretnote.SignInResponse:
    properties:
      access_token:
        type: string
      id:
        type: string
    type: object
  secretnote.createNoteRequest:
    properties:
      expiredat:
        type: string
      noteremvisits:
        type: integer
      text:
        type: string
      userid:
        type: string
    required:
    - expiredat
    - noteremvisits
    - text
    - userid
    type: object
  secretnote.signInUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  secretnote.signUpUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
host: localhost:8090
info:
  contact: {}
  description: This is a simple API for sharing secret notes.
  title: Secret Note API
  version: "1.0"
paths:
  /create:
    post:
      consumes:
      - application/json
      description: Create a new note with unique URL
      parameters:
      - description: Note data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/secretnote.createNoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Note'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/secretnote.ErrorResponse'
      summary: Create a new note
  /note/{id}:
    get:
      consumes:
      - application/json
      description: Get a note by its ID Using the link parsing
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Note'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/secretnote.ErrorResponse'
      summary: Retrieve a specific note
  /notes/{userid}:
    get:
      consumes:
      - application/json
      description: Get all notes for the specified user
      parameters:
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/db.Note'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/secretnote.ErrorResponse'
      summary: Retrieve all notes for a user
  /signin:
    post:
      consumes:
      - application/json
      description: Authenticate a user with email and password to receive an access
        token
      parameters:
      - description: User credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/secretnote.signInUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/secretnote.SignInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/secretnote.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/secretnote.ErrorResponse'
      summary: Sign in a user
  /signup:
    post:
      consumes:
      - application/json
      description: Create a new user with the provided name, email, and password
      parameters:
      - description: User data
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/secretnote.signUpUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/secretnote.ErrorResponse'
      summary: Sign up a new user
swagger: "2.0"
